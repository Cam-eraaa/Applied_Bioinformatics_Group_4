{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2
    ],
    "data": [
        "+ ",
        "  area <- sqrt(sum(v3*v3))/2",
        "+ ",
        "  d <- 2*area/sqrt(sum(v1*v1))",
        "+ ",
        "  return(d)",
        "+ ",
        "}",
        "> ",
        "cross3d_prod <- function(v1,v2){",
        "+ ",
        "  v3 <- vector()",
        "+ ",
        "  v3[1] <- v1[2]*v2[3]-v1[3]*v2[2]",
        "+ ",
        "  v3[2] <- v1[3]*v2[1]-v1[1]*v2[3]",
        "+ ",
        "  v3[3] <- v1[1]*v2[2]-v1[2]*v2[1]",
        "+ ",
        "  return(v3)",
        "+ ",
        "}",
        "> ",
        "loadings_new = loadings_norm",
        "> ",
        "for(j in unique(line$factor)){",
        "+ ",
        "  loadings_new[[j]]=0",
        "+ ",
        "  for(i in 1:nrow(loadings_norm)){",
        "+ ",
        "  line1 = line %>% dplyr::filter(factor == j) %>% dplyr::select(PC1,PC2,PC3)",
        "+ ",
        "  loadings_new[i,j] = dist3d(b =as.numeric(line1[1,]),",
        "+ ",
        "                            c = as.numeric(line1[3,]),",
        "+ ",
        "                            point = as.numeric(loadings_norm[i,1:3]))",
        "+ ",
        "",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "}",
        "Error: Can't subset columns that don't exist.\n\u001B[31mx\u001B[39m Column `PC1` doesn't exist.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "# Changed here to include PC1",
        "> ",
        "origo = data.frame(PC1=0,PC2=0, PC3 = 0)",
        "> ",
        "line.gd7 = rbind(mean[1,2:4],origo,-mean[1,2:4])",
        "> ",
        "line.gd7$factor = \"Gd7\"",
        "> ",
        "line.toll10b = rbind(mean[2,2:4],origo,-mean[2,2:4])",
        "> ",
        "line.toll10b$factor = \"Toll10b\"",
        "> ",
        "line.toll9 = rbind(mean[3,2:4],origo,-mean[3,2:4])",
        "> ",
        "line.toll9$factor = \"Toll9\"",
        "> ",
        "line = rbind(line.gd7,line.toll10b,line.toll9)",
        "> ",
        "ggplot(line, mapping = aes(x = PC2,y = PC3, color = factor))+ geom_line() + geom_point(data = pctable,  mapping = aes(x = PC2,y = PC3, color = Genotype, shape = Time))",
        "> ",
        "ggplot(line, mapping = aes(x = PC1,y = PC2, color = factor))+ geom_line() + geom_point(data = pctable,  mapping = aes(x = PC1,y = PC2, color = Genotype, shape = Time))",
        "> ",
        "ggplot(line, mapping = aes(x = PC2,y = PC3, color = factor))+ geom_line() + geom_point(data = pctable,  mapping = aes(x = PC2,y = PC3, color = Genotype, shape = Time))",
        "> ",
        "ggplot(line, mapping = aes(x = PC1,y = PC2, color = factor))+ geom_line() + geom_point(data = pctable,  mapping = aes(x = PC1,y = PC2, color = Genotype, shape = Time))",
        "> ",
        "ggplot(line, mapping = aes(x = PC2,y = PC3, color = factor))+ geom_line() + geom_point(data = pctable,  mapping = aes(x = PC2,y = PC3, color = Genotype, shape = Time))",
        "> ",
        "",
        "> ",
        "plotSample2SampleDistance(normExpression.QC)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#'  __Figure 1 Plotting sample to sample distance__ . ",
        "> ",
        "#'  0 means that they are identical and 1 means that they are totally different.  ",
        "> ",
        "#'  The darker the blue the more similar. Also dendogram shows how similar they are. ",
        "> ",
        "#' ",
        "> ",
        "#' Samples do not cluster according to pre an post op. Most likely more due to difference in mapping (technical problem)",
        "> ",
        "#' ",
        "> ",
        "#' #### PCA analysis",
        "> ",
        "#' Running PCA on the samples and plotting the different variables to see which of the parameters that fit the different components the best.",
        "> ",
        "#' ",
        "> ",
        "#' First checking how much the different PC contribute. ",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "mir.pca <- prcomp(t(normExpression.QC), center = TRUE, scale = FALSE) ",
        "> ",
        "e.var = (mir.pca[['sdev']]^2 / sum(mir.pca[['sdev']]^2))",
        "> ",
        "e.var = as.data.frame( e.var )",
        "> ",
        "e.var$PC = as.factor(1:nrow(e.var)) ",
        "> ",
        "e.var$Variance = e.var$e.var*100",
        "> ",
        "e.var$CumulativeVariance = cumsum(e.var$Variance)",
        "> ",
        "qplot(PC, Variance, data=e.var, geom = c(\"point\")",
        "+ ",
        "      , ylim = c(0,max(e.var$Variance)+5) ",
        "+ ",
        "      ,ylab = \"Variance (%)\")",
        "> ",
        "",
        "> ",
        "#'  __Figure 2 Plotting PCA variance__.  ",
        "> ",
        "#'  Displays how much each of the PC contributes to the overall expression.    ",
        "> ",
        "#'  This suggest that the two first PC explains most of the variation.",
        "> ",
        "#'",
        "> ",
        "#+ save2, include=FALSE",
        "> ",
        "#ggsave(paste(params$workingDirectory,params$resultsDirectory, \"PCAvariance.png\", sep = \"/\"))",
        "> ",
        "#'",
        "> ",
        "#'",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "pctable = as.data.frame(mir.pca$x)[, 1:5]",
        "> ",
        "pctable = cbind(pctable, sampleInfo)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "test  = plotPCAplot(PCAinfo = pctable, n.comp = 4,",
        "+ ",
        "            varianceInfo = e.var, ",
        "+ ",
        "            colorComponent = \"Genotype\",pchComponent = \"Time\"",
        "+ ",
        "              ",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "test",
        "> ",
        "",
        "> ",
        "mean = pctable %>% dplyr::select(PC1,PC2,PC3,Genotype) %>%",
        "+ ",
        "  dplyr::group_by(Genotype) %>%",
        "+ ",
        "  dplyr::summarise(PC1 = mean(PC1) ,PC2 = mean(PC2), PC3 = mean(PC3) )",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Original code",
        "> ",
        "# origo = data.frame(PC2=0, PC3 = 0)",
        "> ",
        "# line.gd7 = rbind(mean[1,3:4],origo,-mean[1,3:4])",
        "> ",
        "# line.gd7$factor = \"Gd7\"",
        "> ",
        "# line.toll10b = rbind(mean[2,3:4],origo,-mean[2,3:4])",
        "> ",
        "# line.toll10b$factor = \"Toll10b\"",
        "> ",
        "# line.toll9 = rbind(mean[3,3:4],origo,-mean[3,3:4])",
        "> ",
        "# line.toll9$factor = \"Toll9\"",
        "> ",
        "",
        "> ",
        "# Changed here to include PC1",
        "> ",
        "origo = data.frame(PC1=0,PC2=0, PC3 = 0)",
        "> ",
        "line.gd7 = rbind(mean[1,2:4],origo,-mean[1,2:4])",
        "> ",
        "line.gd7$factor = \"Gd7\"",
        "> ",
        "line.toll10b = rbind(mean[2,2:4],origo,-mean[2,2:4])",
        "> ",
        "line.toll10b$factor = \"Toll10b\"",
        "> ",
        "line.toll9 = rbind(mean[3,2:4],origo,-mean[3,2:4])",
        "> ",
        "line.toll9$factor = \"Toll9\"",
        "> ",
        "",
        "> ",
        "line = rbind(line.gd7,line.toll10b,line.toll9)",
        "> ",
        "",
        "> ",
        "ggplot(line, mapping = aes(x = PC2,y = PC3, color = factor))+ geom_line() + geom_point(data = pctable,  mapping = aes(x = PC2,y = PC3, color = Genotype, shape = Time))",
        "> ",
        "",
        "> ",
        "ggplot(line, mapping = aes(x = PC1,y = PC2, color = factor))+ geom_line() + geom_point(data = pctable,  mapping = aes(x = PC1,y = PC2, color = Genotype, shape = Time))",
        "> ",
        "",
        "> ",
        "ggplot(line, mapping = aes(x = PC2,y = PC3, color = factor))+ geom_line() + geom_point(data = pctable,  mapping = aes(x = PC2,y = PC3, color = Genotype, shape = Time))",
        "> ",
        "",
        "> ",
        "ggplot(line, mapping = aes(x = PC1,y = PC3, color = factor))+ geom_line() + geom_point(data = pctable,  mapping = aes(x = PC1,y = PC3, color = Genotype, shape = Time))",
        "> ",
        "View(pctable)",
        "> ",
        "View(mean)",
        "> ",
        "View(pctable)",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "#BiocManager::install(\"clusterProfiler\")",
        "> ",
        "#BiocManager::install(\"org.Dm.eg.db\")",
        "> ",
        "#install.packages(\"ggrepel\")",
        "> ",
        "#install.packages(\"kableExtra\")",
        "> ",
        "#install.packages(\"heatmap3\")",
        "> ",
        "#install.packages(\"tsne\")",
        "> ",
        "#install.packages(\"umap\")",
        "> ",
        "library(umap)",
        "> ",
        "library(clusterProfiler)",
        "> ",
        "library(org.Dm.eg.db)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(gplots)",
        "> ",
        "library(knitr)",
        "> ",
        "library(kableExtra)",
        "> ",
        "library(\"viridis\")     ",
        "> ",
        "library(heatmap3)",
        "> ",
        "library(ggrepel)",
        "> ",
        "library(tsne)",
        "> ",
        "",
        "> ",
        "# Loading the gtf file to extract annotation. ",
        "> ",
        "gtfFile = paste(params$workingDir, \"Drosophila_melanogaster.BDGP6.28.101.gtf\", sep = \"/\")",
        "> ",
        "gtfInfo = read.table(file = gtfFile, header = F, sep = \"\\t\", quote = \"\", stringsAsFactors = F)",
        "> ",
        "# Chosing only the annotation for genes",
        "> ",
        "gtfInfoGene = gtfInfo %>% dplyr::filter(V3 == \"gene\")",
        "> ",
        "# Extract only gene name and geneID",
        "> ",
        "gtfInfoGene = gtfInfoGene[grep(pattern = \"gene_biotype \\\"protein_coding\\\"\",x = gtfInfoGene$V9 ),  ] ",
        "> ",
        "gtfInfoGene= gtfInfoGene %>% separate(col = V9,sep = \";\",into =  c(\"geneID1\", \"geneName1\", \"gene_source\", \"gene_biotype\", \"empty\"))",
        "> ",
        "gtfInfoGene= gtfInfoGene %>% separate(col = geneID1,sep = \"\\\"\",into =  c(\"irrelevant\", \"geneID\", \"empty\"))",
        "> ",
        "gtfInfoGene= gtfInfoGene %>% separate(col = geneName1,sep = \"\\\"\",into =  c(\"irrelevant1\", \"geneName\", \"empty\"))",
        "> ",
        "#gtfInfoGene = gtfInfoGene$geneID",
        "> ",
        "",
        "> ",
        "###### Contiune to fix the data frame gtfInfoGene",
        "> ",
        "gtfInfoAnnotation = gtfInfoGene  %>% select(V1,V4,V5,V7,geneID,geneName)",
        "Error in (function (classes, fdef, mtable)  : \n  unable to find an inherited method for function ‘select’ for signature ‘\"data.frame\"’\n",
        "> ",
        "BiocManager::install(\"clusterProfiler\")",
        "trying URL 'https://bioconductor.org/packages/3.12/bioc/bin/macosx/contrib/4.0/clusterProfiler_3.18.0.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 669762 bytes (654 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 654 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/7y/c7v9j2_161730jtsnz0p9vtc0000gn/T//RtmphdRicB/downloaded_packages\nUpdate all/some/none? [a/s/n]: ",
        "",
        "a",
        "\n  There are binary versions available but the source versions are later:\n\n",
        "Do you want to install from sources the packages which need compilation? (Yes/no/cancel) ",
        "no",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/colorspace_2.0-0.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 2616761 bytes (2.5 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 2.5 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/ggraph_2.0.3.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 4585571 bytes (4.4 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 4.4 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/lubridate_1.7.9.2.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 1608098 bytes (1.5 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 1.5 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/RcppArmadillo_0.10.1.0.0.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 1867485 bytes (1.8 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 1.8 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/rstudioapi_0.13.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 271959 bytes (265 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 265 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/7y/c7v9j2_161730jtsnz0p9vtc0000gn/T//RtmphdRicB/downloaded_packages\n",
        "trying URL 'https://bioconductor.org/packages/3.12/bioc/src/contrib/enrichplot_1.10.1.tar.gz'\n",
        "Content type 'application/x-gzip'",
        " length 78582 bytes (76 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 76 KB\n\n",
        "trying URL 'https://cran.rstudio.com/src/contrib/rprojroot_2.0.2.tar.gz'\n",
        "Content type 'application/x-gzip'",
        " length 59967 bytes (58 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 58 KB\n\n",
        "* installing *source* package ‘enrichplot’ ...\n",
        "** using staged installation\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "** building package indices\n",
        "** installing vignettes\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n",
        "* DONE (enrichplot)\n",
        "* installing *source* package ‘rprojroot’ ...\n",
        "** package ‘rprojroot’ successfully unpacked and MD5 sums checked\n",
        "** using staged installation\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "*** copying figures\n",
        "** building package indices\n",
        "** installing vignettes\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n",
        "* DONE (rprojroot)\n",
        "\n",
        "",
        "The downloaded source packages are in\n\t‘/private/var/folders/7y/c7v9j2_161730jtsnz0p9vtc0000gn/T/RtmphdRicB/downloaded_packages’",
        "",
        "\n",
        "> ",
        "BiocManager::install(\"org.Dm.eg.db\")",
        "trying URL 'https://bioconductor.org/packages/3.12/data/annotation/src/contrib/org.Dm.eg.db_3.12.0.tar.gz'\n",
        "Content type 'application/x-gzip'",
        " length 28500303 bytes (27.2 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 27.2 MB\n\n",
        "* installing *source* package ‘org.Dm.eg.db’ ...\n",
        "** using staged installation\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "** building package indices\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n",
        "* DONE (org.Dm.eg.db)\n",
        "\n",
        "",
        "The downloaded source packages are in\n\t‘/private/var/folders/7y/c7v9j2_161730jtsnz0p9vtc0000gn/T/RtmphdRicB/downloaded_packages’",
        "",
        "\n",
        "Update all/some/none? [a/s/n]: ",
        "",
        "a",
        "\n  There are binary versions available but the source versions are later:\n\n",
        "Do you want to install from sources the packages which need compilation? (Yes/no/cancel) ",
        "no",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/ggraph_2.0.3.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 4585571 bytes (4.4 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 4.4 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.0/RcppArmadillo_0.10.1.0.0.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 1867485 bytes (1.8 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 1.8 MB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/7y/c7v9j2_161730jtsnz0p9vtc0000gn/T//RtmphdRicB/downloaded_packages\n",
        "> ",
        "install.packages(\"ggrepel\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"kableExtra\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"heatmap3\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"tsne\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"umap\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n"
    ]
}