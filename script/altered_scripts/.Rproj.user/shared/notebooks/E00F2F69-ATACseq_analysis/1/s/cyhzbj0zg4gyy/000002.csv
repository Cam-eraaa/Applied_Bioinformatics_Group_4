"0","#Cretae expression data and meta data and fix rownames"
"0","exp.data = countData_mutants"
"0","metaInfo = sampleInfo_Mutants"
"0","rownames(metaInfo) = sampleInfo_Mutants$SampleInfo"
"0",""
"0","#Create factor values"
"0","metaInfo$Antibody = as.factor(metaInfo$Antibody)"
"0","metaInfo$Genotype = as.factor(metaInfo$Genotype)"
"0",""
"0","#Create a DESeq data set from exp.data and metaInfo"
"0","dds <- DESeqDataSetFromMatrix(countData = exp.data,"
"0","                               colData = metaInfo,"
"0","                               design = ~Genotype )"
"0",""
"0",""
"0","#Remove rows with low counts and normalize samples for visualization"
"0","dds <- dds[ rowSums(counts(dds)) > 100, ]"
"0",""
"0","dim(dds)"
"1","[1]"
"1"," 9013"
"1","   27"
"1","
"
"0","#Transform the count data in the DESeq data frame to the log2 scale which minimizes differences between samples for rows with small counts, and which normalizes with respect to library size"
"0","rld <- rlog(dds)"
"0",""
"0","#Put this normalized data into a data frame"
"0","normExpression = as.data.frame(assay(rld))"
"0",""
"0","#Create a normalized expression data frame"
"0","normExpression$geneID = rownames(normExpression)"
"0","normExpressionDF  = normExpression %>% gather( key = sampleName, value = rlog, -geneID)"
"0",""
"0","#normExpressionDF = inner_join(normExpressionDF, sampleInfo)"
"0",""
"0","#Plot and color by sampleName"
"0","ggplot(normExpressionDF, aes(x = rlog, color = sampleName)) + geom_density()"
