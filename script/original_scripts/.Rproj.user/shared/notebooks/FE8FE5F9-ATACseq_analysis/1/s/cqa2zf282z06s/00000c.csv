"0","# Saves the loading scores for PC1-PC3"
"0","line = rbind(line.gd7,line.toll10b,line.toll9, line.time)"
"0","loadings =mir.pca$rotation[,1:3]"
"0",""
"0","# Converts the loading values by subtracting the column(PC) mean and dividing by the column(PC) standard deviation. The columns needs to be transposed to rows to calculate and are then transposed back to columns"
"0","loadings_norm = as.data.frame(t((t(loadings)-colMeans(loadings))/colSds(loadings)))"
"0","loadings_norm$Geneid = rownames(loadings)"
"0",""
"0","loadings_new = loadings_norm"
"0","for(j in unique(line$factor)){"
"0","  loadings_new[[j]]=0"
"0","  for(i in 1:nrow(loadings_norm)){"
"0","  line1 = line %>% dplyr::filter(factor == j) %>% dplyr::select(PC1,PC2,PC3)"
"0","  loadings_new[i,j] = dist3d(b =as.numeric(line1[1,]),"
"0","                            c = as.numeric(line1[3,]),"
"0","                            point = as.numeric(loadings_norm[i,1:3]))"
"0",""
"0","  }"
"0",""
"0","}"
"0",""
"0","  "
"0","loadingsDF = gather(loadings_new, key = PC, value = Loading, -Geneid )"
"0",""
"0","ggplot(loadingsDF, mapping = aes(x = Loading, color = PC )) + geom_density() "
