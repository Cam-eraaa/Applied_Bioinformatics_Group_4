"0",""
"0","# Recreates the same data fram as loadings_new but in another column order"
"0","loadingsDF.all = loadingsDF %>%  spread(key = PC, value = Loading)"
"0",""
"0","tmp = loadingsDF.all"
"0","tmp$distance =  ((tmp$PC1^2 + tmp$PC2^2 + tmp$PC3^2)^0.5)"
"0","loadingsDF.all = tmp"
"0",""
"0",""
"0","loadingsDF.all.factorDistance =loadingsDF.all %>% gather(key = factor, value = distance2Factor,Time,Gd7,Toll10B,Toll9 )"
"0",""
"0","loadingsDF.all.factorDistance$distanceFactor = sqrt(loadingsDF.all.factorDistance$distance^2 -"
"0","                                                   loadingsDF.all.factorDistance$distance2Factor^2)"
"0",""
"0","loadingsDF.all.factorDistance$distanceFactor[is.na(loadingsDF.all.factorDistance$distanceFactor)] = 0"
"0",""
"0",""
"0","loadingsDF.all.factorDistance$direction = ""Down"""
"0","line$Dir = rep(c(""Up"",""origo"",""Down""), 4)"
"0",""
"0",""
"0","for(i in 1:nrow(loadingsDF.all.factorDistance)){"
"0","  factor2 = loadingsDF.all.factorDistance[i,]$factor"
"0","  UpPoint = line %>% dplyr::filter(factor == factor2 & Dir == ""Up"") %>% dplyr::select(PC1,PC2,PC3)"
"0","  DownPoint = line %>% dplyr::filter(factor == factor2 & Dir == ""Down"") %>% dplyr::select(PC1,PC2,PC3)"
"0","  point = loadingsDF.all.factorDistance[i,c(""PC1"",""PC2"",""PC3"")]"
"0","  up = distance3d(as.numeric( UpPoint),as.numeric(point))"
"0","  down = distance3d(as.numeric(DownPoint),as.numeric(point))"
"0","  "
"0","  if(up < down){"
"0","    loadingsDF.all.factorDistance[i,""direction""] = ""Up"""
"0","  }else{"
"0","    loadingsDF.all.factorDistance[i,""distanceFactor""] = "
"0","      -loadingsDF.all.factorDistance[i,""distanceFactor""]"
"0","  }"
"0","}"
"0",""
"0","loadingsDF.all.factorDistance2 = loadingsDF.all.factorDistance %>% dplyr::select( Geneid,PC1, PC2,PC3, distance, factor,distanceFactor) %>% spread( key = factor, value = distanceFactor)"
"0",""
"0",""
"0","loadingsDF.all.factorDistance.max = loadingsDF.all.factorDistance %>% group_by(Geneid) %>% summarise(max = max(abs(distanceFactor)))"
"2","`summarise()` ungrouping output (override with `.groups` argument)
"
"0"," "
"0",""
"0",""
"0","loadingsDF.all.factorDistance$max=abs(loadingsDF.all.factorDistance$distanceFactor) "
"0",""
"0",""
"0",""
"0","loadingsDF.all.factorDistance.max = inner_join(loadingsDF.all.factorDistance,loadingsDF.all.factorDistance.max) %>%"
"0","  dplyr::select(Geneid, factor, direction)"
"2","Joining, by = c(""Geneid"", ""max"")
"
"0","loadingsDF.all.factorDistance.max.peakInfo = inner_join (peakInfo,loadingsDF.all.factorDistance.max )"
"2","Joining, by = ""Geneid""
"
"0","loadingsDF.all.factorDistance.max.peakInfo = inner_join("
"0","  loadingsDF.all.factorDistance.max.peakInfo,"
"0","  loadingsDF.all.factorDistance2"
"0",")"
"2","Joining, by = ""Geneid""
"
"0","loadingsDF.all.factorDistance.max.peakInfo2 = "
"0","  loadingsDF.all.factorDistance.max.peakInfo %>%"
"0","  dplyr::select(-PC1, -PC2,-PC3,-distance)"
"0",""
"0",""
"0","fileNameATACseq = paste( params$workingDir, params$ATACresultsDir,  "
"0","                        params$ATACSeq.data.raw,"
"0","                             sep = ""/"")"
"0","write.table(x = loadingsDF.all.factorDistance.max.peakInfo2, file = fileNameATACseq,"
"0","                  quote = F, sep = ""\t"", col.names = T, row.names = F) "
"0",""
"0","# Parameter changeable??? Goes 9000 to 2000 genes"
"0","loadingsDF.all.filtered = loadingsDF.all.factorDistance.max.peakInfo %>% filter(distance >2)  %>% dplyr::select(Geneid, factor, direction)"
"0",""
"0","loadingsDF.all.filtered2  = inner_join(loadingsDF.all.filtered, loadingsDF.all.factorDistance2)"
"2","Joining, by = ""Geneid""
"
"0","loadingsDF.all.filtered = loadingsDF.all.filtered2 "
"0","dim(loadingsDF.all.filtered)"
"1","[1]"
"1"," 2043"
"1","   11"
"1","
"
"0","loadingsDF.all.filtered.peakInfo = inner_join (peakInfo,loadingsDF.all.filtered )"
"2","Joining, by = ""Geneid""
"
"0","PROseq.data.selected  = PROseq.data %>%filter (annotation2 == ""DE"") %>%dplyr::select(geneID,transcriptID, factor,direction) %>% distinct()"
"0",""
"0",""
"0","write.table(x = loadingsDF.all.filtered.peakInfo, "
"0","            file = paste( params$workingDir, params$resultsDir, "
"0","                          ""selectedGenes.tsv"" ,sep = ""/""),"
"0","            quote = F, sep = ""\t"", col.names = TRUE, row.names = F)  "
"0",""
"0",""
